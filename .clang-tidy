---
Checks: "bugprone-assert-side-effect,
         bugprone-bad-signal-to-kill-thread,
         bugprone-bool-pointer-implicit-conversion,
         bugprone-branch-clone,
         bugprone-copy-constructor-init,
         bugprone-dangling-handle,
         bugprone-dynamic-static-initializers,
         bugprone-exception-escape,
         bugprone-fold-init-type,
         bugprone-forward-declaration-namespace,
         bugprone-forwarding-reference-overload,
         bugprone-implicit-widening-of-multiplication-result,
         bugprone-inaccurate-erase,
         bugprone-incorrect-roundings,
         bugprone-infinite-loop,
         bugprone-integer-division,
         bugprone-lambda-function-name,
         bugprone-macro-parentheses,
         bugprone-macro-repeated-side-effects,
         bugprone-misplaced-operator-in-strlen-in-alloc,
         bugprone-misplaced-pointer-arithmetic-in-alloc,
         bugprone-misplaced-widening-cast,
         bugprone-move-forwarding-reference,
         bugprone-multiple-statement-macro,
         bugprone-no-escape,
         bugprone-not-null-terminated-result,
         bugprone-parent-virtual-call,
         bugprone-posix-return,
         bugprone-redundant-branch-condition,
         bugprone-reserved-identifier,
         bugprone-shared-ptr-array-mismatch,
         bugprone-signal-handler,
         bugprone-signed-char-misuse,
         bugprone-sizeof-container,
         bugprone-sizeof-expression,
         bugprone-spuriously-wake-up-functions,
         bugprone-string-constructor,
         bugprone-string-integer-assignment,
         bugprone-string-literal-with-embedded-nul,
         bugprone-stringview-nullptr,
         bugprone-suspicious-enum-usage,
         bugprone-suspicious-include,
         bugprone-suspicious-memory-comparison,
         bugprone-suspicious-memset-usage,
         bugprone-suspicious-missing-comma,
         bugprone-suspicious-semicolon,
         bugprone-suspicious-string-compare,
         bugprone-swapped-arguments,
         bugprone-terminating-continue,
         bugprone-throw-keyword-missing,
         bugprone-too-small-loop-variable,
         bugprone-unchecked-optional-access,
         bugprone-undefined-memory-manipulation,
         bugprone-undelegated-constructor,
         bugprone-unhandled-exception-at-new,
         bugprone-unhandled-self-assignment,
         bugprone-unused-raii,
         bugprone-unused-return-value,
         bugprone-use-after-move,
         bugprone-virtual-near-miss,
         cert-dcl21-cpp,
         cert-dcl50-cpp,
         cert-dcl58-cpp,
         cert-err34-c,
         cert-err58-cpp,
         cert-err60-cpp,
         cert-flp30-c,
         cppcoreguidelines-avoid-goto,
         cppcoreguidelines-avoid-non-const-global-variables,
         cppcoreguidelines-init-variables,
         cppcoreguidelines-interfaces-global-init,
         cppcoreguidelines-macro-usage,
         cppcoreguidelines-narrowing-conversions,
         cppcoreguidelines-no-malloc,
         # cppcoreguidelines-owning-memory, # I don't want to use gls
         cppcoreguidelines-prefer-member-initializer,
         # cppcoreguidelines-pro-bounds-array-to-pointer-decay,
         cppcoreguidelines-pro-bounds-constant-array-index,
         cppcoreguidelines-pro-bounds-pointer-arithmetic,
         cppcoreguidelines-pro-type-const-cast,
         cppcoreguidelines-pro-type-cstyle-cast,
         cppcoreguidelines-pro-type-member-init,
         cppcoreguidelines-pro-type-reinterpret-cast,
         cppcoreguidelines-pro-type-static-cast-downcast,
         cppcoreguidelines-pro-type-vararg,
         cppcoreguidelines-slicing,
         cppcoreguidelines-special-member-functions,
         cppcoreguidelines-virtual-class-destructor,
         # fuchsia-default-arguments-declarations,
         fuchsia-statically-constructed-objects,
         fuchsia-trailing-return,
         # fuchsia-virtual-inheritance,
         google-build-explicit-make-pair,
         google-build-namespaces,
         # google-build-using-namespace,
         # google-default-arguments,
         google-explicit-constructor,
         google-global-names-in-headers,
         google-readability-avoid-underscore-in-googletest-name,
         google-readability-casting,
         google-readability-todo,
         google-runtime-int,
         google-runtime-operator,
         google-upgrade-googletest-case,
         hicpp-avoid-goto,
         hicpp-exception-baseclass,
         hicpp-multiway-paths-covered,
         hicpp-no-assembler,
         llvm-header-guard,
         llvm-include-order,
         llvm-namespace-comment,
         misc-definitions-in-headers,
         misc-misleading-identifier,
         misc-misplaced-const,
         misc-new-delete-overloads,
         misc-no-recursion,
         misc-non-copyable-objects,
         misc-non-private-member-variables-in-classes,
         misc-redundant-expression,
         misc-static-assert,
         misc-throw-by-value-catch-by-reference,
         misc-unconventional-assign-operator,
         misc-uniqueptr-reset-release,
         misc-unused-alias-decls,
         misc-unused-parameters,
         misc-unused-using-decls,
         modernize-avoid-bind,
         modernize-avoid-c-arrays,
         modernize-concat-nested-namespaces,
         modernize-deprecated-headers,
         modernize-deprecated-ios-base-aliases,
         modernize-loop-convert,
         modernize-macro-to-enum,
         modernize-make-shared,
         modernize-make-unique,
         modernize-pass-by-value,
         modernize-raw-string-literal,
         modernize-redundant-void-arg,
         modernize-replace-auto-ptr,
         modernize-replace-disallow-copy-and-assign-macro,
         modernize-replace-random-shuffle,
         modernize-return-braced-init-list,
         modernize-shrink-to-fit,
         modernize-unary-static-assert,
         modernize-use-auto,
         modernize-use-bool-literals,
         modernize-use-default-member-init,
         modernize-use-emplace,
         modernize-use-equals-default,
         modernize-use-equals-delete,
         modernize-use-nodiscard,
         modernize-use-noexcept,
         modernize-use-nullptr,
         modernize-use-override,
         modernize-use-transparent-functors,
         modernize-use-uncaught-exceptions,
         modernize-use-using,
         performance-faster-string-find,
         performance-for-range-copy,
         performance-implicit-conversion-in-loop,
         performance-inefficient-algorithm,
         performance-inefficient-string-concatenation,
         performance-inefficient-vector-operation,
         performance-move-const-arg,
         performance-move-constructor-init,
         performance-no-automatic-move,
         performance-no-int-to-ptr,
         performance-noexcept-move-constructor,
         performance-trivially-destructible,
         performance-type-promotion-in-math-fn,
         performance-unnecessary-copy-initialization,
         performance-unnecessary-value-param,
         readability-avoid-const-params-in-decls,
         readability-braces-around-statements,
         readability-const-return-type,
         readability-container-contains,
         readability-container-data-pointer,
         readability-container-size-empty,
         readability-convert-member-functions-to-static,
         readability-delete-null-pointer,
         readability-duplicate-include,
         readability-else-after-return,
         readability-function-cognitive-complexity,
         readability-function-size,
         readability-identifier-naming,
         readability-implicit-bool-conversion,
         readability-inconsistent-declaration-parameter-name,
         readability-isolate-declaration,
         readability-magic-numbers,
         readability-make-member-function-const,
         readability-misleading-indentation,
         readability-misplaced-array-index,
         readability-named-parameter,
         readability-non-const-parameter,
         readability-qualified-auto,
         readability-redundant-access-specifiers,
         readability-redundant-control-flow,
         readability-redundant-declaration,
         readability-redundant-function-ptr-dereference,
         readability-redundant-member-init,
         readability-redundant-preprocessor,
         readability-redundant-smartptr-get,
         readability-redundant-string-cstr,
         readability-redundant-string-init,
         readability-simplify-boolean-expr,
         readability-simplify-subscript-expr,
         readability-static-accessed-through-instance,
         readability-static-definition-in-anonymous-namespace,
         readability-string-compare,
         readability-suspicious-call-argument,
         readability-uniqueptr-delete-release,
         readability-uppercase-literal-suffix,
         readability-use-anyofallof,
"
CheckOptions:
  - key: readability-identifier-naming.ParameterCase
    value: camelBack
  # - key: readability-identifier-naming.ParameterPrefix
  #   value: p_
  - key: readability-identifier-naming.ClassCase
    value: CamelCase
  - key: readability-identifier-naming.ClassConstantCase
    value: UPPER_CASE
  - key: readability-identifier-naming.PublicMemberCase
    value: lower_case
  - key: readability-identifier-naming.PrivateMemberCase
    value: lower_case
  - key: readability-identifier-naming.PrivateMemberSuffix
    value: _
  - key: readability-identifier-naming.ClassMethodCase
    value: CamelCase
WarningsAsErrors: ''
HeaderFilterRegex: ''
FormatStyle:     none
